# Redis configuration for Bot Provisional
# Optimized for the chatbot's caching and session management needs

# =============================================================================
# GENERAL CONFIGURATION
# =============================================================================

# Enable protected mode (require authentication)
protected-mode yes

# Bind to all interfaces when running in Docker
bind 0.0.0.0

# Port configuration (default)
port 6379

# Timeout for idle clients (in seconds)
# 0 = never timeout
timeout 300

# TCP keepalive (seconds)
tcp-keepalive 300

# =============================================================================
# PERSISTENCE CONFIGURATION
# =============================================================================

# Enable RDB snapshots for persistence
save 900 1      # Save if at least 1 key changed in 900 seconds
save 300 10     # Save if at least 10 keys changed in 300 seconds  
save 60 10000   # Save if at least 10000 keys changed in 60 seconds

# Compress RDB files
rdbcompression yes

# Checksum RDB files
rdbchecksum yes

# RDB filename
dbfilename dump.rdb

# Enable AOF (Append Only File) for better durability
appendonly yes
appendfilename "appendonly.aof"

# AOF fsync policy
# everysec: fsync every second (good compromise)
# always: fsync every write (slow but safest)
# no: never fsync (fastest but least safe)
appendfsync everysec

# Rewrite AOF when it grows by this percentage
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# =============================================================================
# MEMORY MANAGEMENT
# =============================================================================

# Maximum memory usage (adjust based on available container memory)
# For development, 256MB should be sufficient
maxmemory 256mb

# Memory policy when max memory is reached
# allkeys-lru: Remove any key according to LRU algorithm
# allkeys-lfu: Remove any key according to LFU algorithm  
# volatile-lru: Remove keys with expire set according to LRU
# volatile-ttl: Remove keys with expire set and shorter TTL first
maxmemory-policy allkeys-lru

# Sample size for LRU/LFU algorithms
maxmemory-samples 5

# =============================================================================
# SECURITY
# =============================================================================

# Require authentication (password will be set via environment variable)
# requirepass will be set through Docker environment

# Disable dangerous commands in production
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""
# rename-command KEYS ""
# rename-command CONFIG ""

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Hash table sizing
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List compression
list-max-ziplist-size -2
list-compress-depth 0

# Set sizing
set-max-intset-entries 512

# Sorted set sizing
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# Enable lazy freeing for better performance
lazyfree-lazy-eviction yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes

# =============================================================================
# LOGGING
# =============================================================================

# Log level: debug, verbose, notice, warning
loglevel notice

# Log to stdout for Docker
logfile ""

# Enable syslog
# syslog-enabled yes
# syslog-ident redis

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Number of databases (we'll use specific databases for different purposes)
# 0: General cache
# 1: Celery broker
# 2: Celery results
# 3: Session storage
# 4: Temporary data
databases 16

# =============================================================================
# CLIENT CONFIGURATION
# =============================================================================

# Max number of connected clients
maxclients 10000

# TCP backlog
tcp-backlog 511

# =============================================================================
# SLOW LOG CONFIGURATION
# =============================================================================

# Log queries slower than this many microseconds
slowlog-log-slower-than 10000

# Maximum length of slow log
slowlog-max-len 128

# =============================================================================
# LATENCY MONITORING
# =============================================================================

# Enable latency monitoring
latency-monitor-threshold 100

# =============================================================================
# MODULES AND EXTENSIONS
# =============================================================================

# Load Redis modules if needed
# loadmodule /path/to/my_module.so

# =============================================================================
# CLUSTER CONFIGURATION (disabled for single instance)
# =============================================================================

# cluster-enabled no

# =============================================================================
# BOT PROVISIONAL SPECIFIC SETTINGS
# =============================================================================

# Custom settings for our chatbot use case

# Notify keyspace events for cache invalidation
# K = keyspace events, E = keyevent events, x = expired events
notify-keyspace-events "KEA"

# Enable active rehashing for better performance
activerehashing yes

# Client output buffer limits for pub/sub
client-output-buffer-limit pubsub 32mb 8mb 60

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# These settings are optimized for development
# In production, consider adjusting:
# - maxmemory based on available RAM
# - save intervals based on data criticality
# - Enable requirepass for security
# - Disable appendonly if data persistence is not critical
# - Tune maxclients based on expected load